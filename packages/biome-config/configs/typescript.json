{
 "$schema": "https://biomejs.dev/schemas/latest/schema.json",
 "linter": {
  "enabled": true,
  "rules": {
   "recommended": false,
   "a11y": {},
   "complexity": {
    "noUselessUndefinedInitialization": "error",
    "noBannedTypes": "error",
    "noUselessTypeConstraint": "error"
   },
   "correctness": {
    "noUnusedImports": "error",
    "noConstructorReturn": "error",
    "noInvalidUseBeforeDeclaration": "error",
    "useExhaustiveDependencies": "warn",
    "useHookAtTopLevel": "error"
   },
   "nursery": {},
   "performance": {
    "noAccumulatingSpread": "error",
    "noDelete": "error",
    "noReExportAll": "error"
   },
   "security": {},
   "style": {
    "noNonNullAssertion": "error",
    "useExportType": "error",
    "useAsConstAssertion": "error",
    "useImportType": "error",
    "useShorthandFunctionType": "error",
    "useNamingConvention": {
     "level": "error",
     "options": {
      "strictCase": false,
      "requireAscii": true,
      "conventions": [
       {
        "formats": ["camelCase"],
        "selector": {
         "kind": "function",
         "scope": "any"
        }
       },
       {
        "formats": ["camelCase"],
        "selector": {
         "kind": "functionParameter",
         "scope": "any"
        }
       },
       {
        "formats": ["PascalCase"],
        "selector": {
         "kind": "class",
         "scope": "any"
        }
       },
       {
        "formats": ["PascalCase"],
        "selector": {
         "kind": "interface",
         "scope": "any"
        }
       },
       {
        "formats": ["PascalCase"],
        "selector": {
         "kind": "typeAlias",
         "scope": "any"
        }
       },
       {
        "formats": ["camelCase"],
        "selector": {
         "kind": "typeParameter",
         "scope": "any"
        }
       },
       {
        "formats": ["PascalCase"],
        "selector": {
         "kind": "enum",
         "scope": "any"
        }
       },
       {
        "formats": ["CONSTANT_CASE"],
        "selector": {
         "kind": "enumMember",
         "scope": "any"
        }
       }
      ]
     }
    }
   },
   "suspicious": {
    "noConfusingVoidType": "error",
    "noMisleadingInstantiator": "error",
    "noEmptyInterface": "error",
    "noExplicitAny": "error",
    "noUnsafeDeclarationMerging": "error",
    "useNamespaceKeyword": "error"
   }
  }
 }
}
